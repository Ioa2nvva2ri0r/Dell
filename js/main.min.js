"use strict";function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_unsupportedIterableToArray(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArrayLimit(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,a,o,i,c=[],l=!0,u=!1;try{if(o=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=o.call(r)).done)&&(c.push(n.value),c.length!==t);l=!0);}catch(e){u=!0,a=e}finally{try{if(!l&&null!=r.return&&(i=r.return(),Object(i)!==i))return}finally{if(u)throw a}}return c}}function _arrayWithHoles(e){if(Array.isArray(e))return e}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var swiper=new Swiper(".swiper",{loop:!0,speed:800,hideOnClick:!0,spaceBetween:200,navigation:{nextEl:".swiper-button-next"},effect:"coverflow",autoplay:{delay:7e3},a11y:{nextSlideMessage:"Вправо"},pagination:{el:".swiper-pagination",clickable:!0}});function addError(e,t,r){var n=function(e,t){return e.classList.toggle(t)};n(e,"error-valid__input"),e.insertAdjacentHTML("afterend",'<div id="error-valid" class="error-valid__message" role="alert">'.concat(t,"<div/>"));var a=document.getElementById("error-valid");null!==a&&setTimeout((function(){a.parentElement.style.position="relative",n(a,"error-valid__message-active"),setTimeout((function(){a.parentElement.style.position=null,n(e,"error-valid__input"),n(a,"error-valid__message-active")}),r-305),setTimeout((function(){a.remove()}),r)}),10)}function regExp(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",n=function(e,t){return new RegExp("[^".concat(e).concat(r,"]"),t)};switch(e){case"email":return!/^([a-z0-9_-]+\.)*[a-z0-9_-]+@[a-z0-9_-]+(\.[a-z0-9_-]+)*\.[a-z]{2,6}$/.test(t);case"tel":return!/^\+\d{1,3}\(\d{2,3}\)\d{2,3}-\d{2}-\d{2}$/.test(t);case"number":return n("0-9").test(t);case"ru":return n("а-яё","gi").test(t);case"en":return n("a-z","gi").test(t)}}function debounce(e,t){var r=!1;return function(){r||(r=!0,e.apply(this,arguments),setTimeout((function(){return r=!1}),t))}}var animationMessage=debounce(addError,5e3);function checkError(e){var t=e.type,r=e.value,n=e.name,a=e.placeholder,o=e.checked,i=e.required,c=e.lang,l=e.maxLength,u=e.minLength,s=a||""!==a?a:n,d=l,m=u,f=r.trim(),y=f.length,v=function(e){return t===e},g=e.dataset.excep,p="ru"===c?"русского":"en"===c&&"латинского",_=""!==f||i;function b(t,r){return!!t&&(animationMessage(e,"Поле «".concat(s,"» ").concat(r),5e3),!0)}return[b(y<1&&i,"не указано!"),b((-1!==m||-1!==d)&&y>=1&&(y<m||y>d),"не должно быть ".concat(m&&!d?"менее ".concat(m):d&&!m?"более ".concat(d):m&&d&&(m===d?"менее и более ".concat(m):"".concat(m," и более ").concat(d))," символов!")),b(""!==c&&regExp(c,f,g),"может содержать в себе только: буквы ".concat(p," алфавита!")),b((v("radio")||v("checkbox"))&&!o&&i,"не выбрано!"),b(v("number")&&regExp(t,f)&&_,"содержит символы не являющиеся цифрами!"),b(v("email")&&regExp(t,f)&&_,"указано не правильно, или имеет некорректную формулировку!"),b(v("tel")&&regExp(t,f)&&_,"может содержать в себе только следующую маску ввода: +«Код страны»(«Код оператора»)«Номер телефона через тире»!")].includes(!0)}function dataForm(e){if(e.constructor===HTMLFormElement){var t=_toConsumableArray(new Set(Object.values(e.elements).filter((function(e){return"INPUT"===e.nodeName||"TEXTAREA"===e.nodeName}))));if(0===t.length)return null;for(var r={},n=0,a=Object.entries(t);n<a.length;n++){var o=_slicedToArray(a[n],2),i=o[0],c=o[1],l=c.type,u=c.name,s=c.value,d=c.checked,m="radio"===l||"checkbox"===l;if(!0===checkError(c))return null;m&&d&&(r[u]=d),m||""===s||(r[u]=s),Number(i)===t.length-1&&t.forEach((function(e){var t="radio"===e.type||"checkbox"===e.type;t&&(e.checked=!1),t||(e.value="")}))}return r}throw new Error("Passed parameter is not a HTML-form!")}var body=document.body,menu=document.getElementById("menu"),menuList=document.getElementById("menu-list"),menuBtnToggle=document.getElementById("menu-open");function closeMenu(){menuBtnToggle.classList.remove("header__menu-open-active"),menu.classList.remove("header__nav-active"),body.style.overflowY=null}body.addEventListener("click",(function(e){menuBtnToggle.contains(e.target)||menuList.contains(e.target)||closeMenu()})),menuBtnToggle.addEventListener("click",(function(){menuBtnToggle.classList.toggle("header__menu-open-active"),menu.classList.toggle("header__nav-active"),menu.classList.contains("header__nav-active")?body.style.overflowY="hidden":body.style.overflowY=null})),document.querySelectorAll(".header__nav-link").forEach((function(e){return e.addEventListener("click",closeMenu)}));var form=document.getElementById("form-contact");document.getElementById("btn-submit").addEventListener("click",(function(){if(dataForm(form)){var e=document.createElement("div");e.id="success",e.className="success__message",e.role="alert",e.textContent="Данные успешно отправлены! В ближайшее время мы свяжемся с вами!",form.appendChild(e),setTimeout((function(){e.classList.add("success__message-active"),setTimeout((function(){e.classList.remove("success__message-active")}),4695),setTimeout((function(){e.remove()}),5e3)}),10)}}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
